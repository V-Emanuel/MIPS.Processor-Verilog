module ControlUnit (input [5:0]OP, Funct,
							output reg Jump, MemtoReg, MemWrite, Branch, ULASrc. RegDst, RegWrite, 
							output reg[2:0]ULAControl)
always@(*)
begin
case({OP, Funct})

12'b000000100000: RegWrite = 1, RegDst = 1, ULASrc = 0, ULAControl = 3'b010, Branch = 0, MemWrite = 0, MemtoReg = 0, Jump = 0;
12'b000000100010: RegWrite = 1, RegDst = 1, ULASrc = 0, ULAControl = 3'b110, Branch = 0, MemWrite = 0, MemtoReg = 0, Jump = 0;
12'b000000100100: RegWrite = 1, RegDst = 1, ULASrc = 0, ULAControl = 3'b000, Branch = 0, MemWrite = 0, MemtoReg = 0, Jump = 0;
12'b000000100101: RegWrite = 1, RegDst = 1, ULASrc = 0, ULAControl = 3'b001, Branch = 0, MemWrite = 0, MemtoReg = 0, Jump = 0;
12'b000000101010: RegWrite = 1, RegDst = 1, ULASrc = 0, ULAControl = 3'b111, Branch = 0, MemWrite = 0, MemtoReg = 0, Jump = 0;
12'b100011xxxxxx: RegWrite = 1, RegDst = 0, ULASrc = 1, ULAControl = 3'b010, Branch = 0, MemWrite = 0, MemtoReg = 1, Jump = 0;
12'b101011xxxxxx: RegWrite = 0, RegDst = 'x', ULASrc = 1, ULAControl = 3'b010, Branch = 0, MemWrite = 1, MemtoReg = 'x', Jump = 0;
12'b000100xxxxxx: RegWrite = 0, RegDst = 'x', ULASrc = 0, ULAControl = 3'b110, Branch = 1, MemWrite = 0, MemtoReg = 'x', Jump = 0;
12'b001000xxxxxx: RegWrite = 1, RegDst = 0, ULASrc = 1, ULAControl = 3'b010, Branch = 0, MemWrite = 0, MemtoReg = 0, Jump = 0;
12'b000010xxxxxx: RegWrite = 0, RegDst = 'x', ULASrc = 'x', ULAControl = 'x', Branch = 0, MemWrite = 0, MemtoReg = 'x', Jump = 1;
end
endcase


endmodule

